This application was designed to automate the process of entering initials into a one of our web app in order to set up new sales colleagues in our incentive tracking system. The process recquires entering users names and initials in 27 different locations in an old, slow, and outdated web application that frequently hits our licensed user limit, and needs to be restarted due to hung up processes. Ultimately every new account takes roughly 20 minutes, and is highly prone to user error due to the tedium, so I thought it would be a prime candidate for automation.

Originally I intended to use the backend to add new colleagues to the system, however, after speaking to the head of the Engineering department at my company I discovered that they weren't quite sure how the logic operates on the backend, and weren't comfortable with modifying the process. Because of this, I suggested that I create a web crawler that would basically emulate a user to enter the information in a less programatic way.

Most people seemed to suggest using something like Power Automate to set something like this up, but I didn't feel like learning how to use a new application to record steps, especially since I wanted the script to run without setting up any external packages or enviorments so that my colleagues could also use it. Consequently, I instead found a way to do what I was looking for using an Internet Exploere COM object. Luckily the website in question was old enough that the Internet Explorer browser session was not impeded by modern web design.

Before I actually entered any of the data, I needed the script to download a CSV file to ensure that their are no details of the account that are going to conflict with other accounts that have already been created. Ultiamtely, this was where I stopped development because we discovered that the way that our European and APAC sales departments enter their incentive information meant that their information would not show up when the script ran, meaning that conflicts could be created with accounts in those regions, and we wouldn't know until issues arose.

Despite the project ending in failure, I'm still fairly proud of it since I was able to get around several difficult issues, and I learned a lot in the process. I likely would have continued development inspite of these setbacks, however our incentive tracking system not been near the end of its life in the next few years anyway, so I ended up deciding to move onto other projects.
